// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSTick  // update positions, increment age, fake n-body sim
#pragma kernel CSAddNewSpeciesNode
#pragma kernel CSAddNewSpeciesStemSegments
#pragma kernel CSExctinctSpecies
#pragma kernel CSGetNodeColliderData

#include "Assets/Resources/Shaders/Inc/StructsTreeOfLife.cginc"

RWStructuredBuffer<TreeOfLifeNodeColliderData> treeOfLifeNodeColliderDataCBuffer;
RWStructuredBuffer<TreeOfLifeLeafNodeData> treeOfLifeLeafNodeDataCBuffer;
RWStructuredBuffer<TreeOfLifeStemSegmentData> treeOfLifeStemSegmentDataCBuffer;

StructuredBuffer<int> speciesIndexCBuffer;
StructuredBuffer<TreeOfLifeLeafNodeData> updateSpeciesNodeDataCBuffer;
StructuredBuffer<TreeOfLifeStemSegmentData> updateStemSegmentDataCBuffer;

uniform int _UpdateBufferStartIndex;

[numthreads(1,1,1)]
void CSTick (uint3 id : SV_DispatchThreadID)
{
	// Repel / Re-Position

	// Increment Age
}

[numthreads(1,1,1)]
void CSAddNewSpeciesNode (uint3 id : SV_DispatchThreadID)
{
	int speciesID = speciesIndexCBuffer[id.x];	
	treeOfLifeLeafNodeDataCBuffer[speciesID] = updateSpeciesNodeDataCBuffer[0];
	int parentSpeciesID = treeOfLifeLeafNodeDataCBuffer[speciesID].parentSpeciesID;
	float3 parentLocalPos = treeOfLifeNodeColliderDataCBuffer[parentSpeciesID].localPos;
	treeOfLifeNodeColliderDataCBuffer[speciesID].localPos = float3(parentLocalPos.x + 0.5, parentLocalPos.y - (float)speciesID * 0.15, parentLocalPos.z) * 2;
		
}

[numthreads(1,1,1)]
void CSAddNewSpeciesStemSegments (uint3 id : SV_DispatchThreadID)
{
	int stemSegmentIndex = _UpdateBufferStartIndex + id.x;
	treeOfLifeStemSegmentDataCBuffer[stemSegmentIndex] = updateStemSegmentDataCBuffer[id.x];
	
	//treeOfLifeStemSegmentDataCBuffer[6].speciesID = 1;
	//treeOfLifeStemSegmentDataCBuffer[4].fromID = 4;
	//treeOfLifeStemSegmentDataCBuffer[id.x].toID = 1;

	//TreeOfLifeStemSegmentData newData;
	//newData.speciesID = 2;
	//newData.fromID = 0;
	//newData.toID = 2;
	//treeOfLifeStemSegmentDataCBuffer[0] = newData;
	//treeOfLifeStemSegmentDataCBuffer[5].speciesID = 10;
	//treeOfLifeStemSegmentDataCBuffer[5].fromID = 3;
}

[numthreads(1,1,1)]
void CSExctinctSpecies (uint3 id : SV_DispatchThreadID)
{
	
}

[numthreads(1,1,1)]
void CSGetNodeColliderData (uint3 id : SV_DispatchThreadID)
{
	
}
